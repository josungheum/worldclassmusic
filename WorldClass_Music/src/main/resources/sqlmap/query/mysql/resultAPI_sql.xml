<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ResultApi">

	<select id="ResultApi_GetMaxUpdateDt" resultType="String">
		SELECT	MAX(MOD_DATE)
		FROM	MARQUEE
	</select>
	
	<select id="ResultApi_MarqueeList" parameterType="String" resultType="hashmap">
		<![CDATA[
			SELECT	A.DOMAIN_IDX,
					A.BRAND_IDX,
					A.MQ_IDX,
					A.MQ_TEXT,
					A.MQ_FONT,
					A.MQ_SIZE,
					A.MQ_TEXT_COLOR,
					A.MQ_BG_COLOR,
					A.MQ_TYPE,
					A.ORDER_SEQ,
					A.MOD_DATE
			FROM	MARQUEE A
					INNER JOIN MARQUEE_TARGET B ON A.DOMAIN_IDX = B.DOMAIN_IDX AND A.BRAND_IDX = B.BRAND_IDX AND A.MQ_IDX = B.MQ_IDX
					INNER JOIN KIOSK C ON B.DEVICE_IDX = C.DEVICE_IDX
			WHERE	A.DEL_YN = 'N'
					AND A.ACTIVE_YN = 'Y'
					AND C.DEVICE_CODE = #{dvCode}
			ORDER BY A.MQ_TYPE, A.ORDER_SEQ, A.MOD_DATE ASC
		]]>
	</select>

	<select id="ResultApi_CheckDeviceCode" parameterType="String" resultType="int">
		SELECT	COUNT(*)
		FROM KIOSK
		WHERE	DEVICE_CODE = #{dvCode}
				AND DEL_YN = 'N'
		        AND ACTIVE_YN = 'Y'
	</select>
	
	<select id="ResultApi_EventList" parameterType="String" resultType="hashmap">
		<![CDATA[
			SELECT	A.EVENT_IDX AS eventIdx,
					CONCAT(A.DISP_NM1, '\n', A.DISP_NM2) AS eventName,
			        DATE_FORMAT(A.START_DATE, '%Y-%m-%d 00:00:00') AS startDate,
			        DATE_FORMAT(A.END_DATE, '%Y-%m-%d 23:59:59') AS endDate,
			        A.ORDER_SEQ,
			        IF(A.THUMB_IMG IS NOT NULL, CONCAT('/download/File/', A.THUMB_IMG), '') AS eventBannerImage,
			        B.FILE_SAVE_NAME AS eventBannerFileName,
			        B.FILE_SIZE AS eventBannerFileSize
			FROM	 EVENT A
			LEFT OUTER JOIN FILE_CONTENT B ON A.THUMB_IMG = B.FILE_CONTENT_IDX
			WHERE	A.DEL_YN = 'N'
					AND A.ACTIVE_YN = 'Y'
			        AND NOW() < A.END_DATE
			        AND (DOMAIN_IDX, BRAND_IDX) = (SELECT	DOMAIN_IDX, BRAND_IDX
													FROM	KIOSK
													WHERE	DEVICE_CODE = #{dvCode})
			ORDER BY A.ORDER_SEQ ASC
		]]>
	</select>
	
	<select id="ResultApi_ImgList" parameterType="hashmap" resultType="hashmap">
		SELECT	A.EVENT_TYPE AS eventType,
				IF(A.FILE_CONTENT_IDX IS NOT NULL, CONCAT('/download/File/', A.FILE_CONTENT_IDX), '') AS filePath,
		        B.FILE_SIZE AS fileSize,
		        B.FILE_SAVE_NAME AS fileName
		FROM 	EVENT_IMAGELIST A
		INNER JOIN FILE_CONTENT B ON A.FILE_CONTENT_IDX = B.FILE_CONTENT_IDX
		WHERE	A.EVENT_IDX = #{idx}
				AND A.EVENT_TYPE = #{type}
		ORDER BY A.ORDER_SEQ ASC
	</select>
	
	<select id="ResultApi_AdditionList" parameterType="hashmap" resultType="hashmap">
		SELECT	IF(A.FILE_CONTENT_IDX IS NOT NULL, CONCAT('/download/File/', A.FILE_CONTENT_IDX), '') AS filePath,
				B.FILE_SAVE_NAME AS fileName,
				B.FILE_SIZE AS fileSize
		FROM	 ADDITION_IMAGELIST A
		INNER JOIN FILE_CONTENT B ON A.FILE_CONTENT_IDX = B.FILE_CONTENT_IDX
		WHERE	A.ADDITION_TYPE = #{type}
				AND (DOMAIN_IDX, BRAND_IDX) = (SELECT	DOMAIN_IDX, BRAND_IDX
												FROM	KIOSK
												WHERE	DEVICE_CODE = #{dvCode})
		ORDER BY A.ORDER_SEQ ASC
	</select>

	<select id="ResultApi_PlayerInfo" parameterType="String" resultType="hashmap">
		SELECT	A.DOMAIN_IDX AS domainIdx,
				A.BRAND_IDX AS brandIdx,
				A.FRANC_IDX AS francIdx,
				A.DEVICE_IDX AS deviceIdx,
				A.DEVICE_CODE AS deviceCode,
				A.DEVICE_NAME AS deviceName,
				C.CODE_NAME AS deviceType
		FROM	 KIOSK A
		INNER JOIN SYSTEM_CODE C ON A.DEVICE_TYPE = C.CODE_VALUE AND C.DEL_YN = 'N' AND C.ACTIVE_YN = 'Y'
		WHERE	A.DEL_YN = 'N'
				AND A.ACTIVE_YN = 'Y'
				AND A.DEVICE_CODE = #{dvCode}
	</select>
	
	
	<select id="ResultApi_FloorList" parameterType="String" resultType="hashmap">
		SELECT	A.FLOOR_IDX AS floorIdx,
				A.FLOOR_TYPE AS floorType,
				A.DISP_SHORT_NM AS floorDisplayName,
		        A.DISP_NM_KR AS floorText,
		        A.DISP_NM_EN AS floorTextEn,
		        IF(A.MAP_IMG IS NOT NULL, CONCAT('/download/File/', A.MAP_IMG), '') AS floorImage,
		        B.FILE_SAVE_NAME AS floorImageName,
		        B.FILE_SIZE AS floorImageSize,
		        IF(A.LOGO_IMG IS NOT NULL, CONCAT('/download/File/', A.LOGO_IMG), '') AS floorIcon,
		        C.FILE_SAVE_NAME AS floorIconName,
		        C.FILE_SIZE AS floorIconSize,
		        IFNULL(D.PATH_LIST, '') AS floorPath,
		        D.ROW_CNT AS rowCnt,
		        D.COL_CNT AS colCnt
		FROM	 FLOOR A
		LEFT OUTER JOIN FILE_CONTENT B ON A.MAP_IMG = B.FILE_CONTENT_IDX
		LEFT OUTER JOIN FILE_CONTENT C ON A.LOGO_IMG = C.FILE_CONTENT_IDX
		LEFT OUTER JOIN FLOOR_MAPPATH D ON A.DOMAIN_IDX = D.DOMAIN_IDX AND A.BRAND_IDX = D.BRAND_IDX AND A.FLOOR_IDX = D.FLOOR_IDX
		WHERE	A.DEL_YN = 'N'
				AND A.ACTIVE_YN = 'Y'
		        AND (A.DOMAIN_IDX, A.BRAND_IDX) = ( SELECT	DOMAIN_IDX, BRAND_IDX
													FROM	KIOSK
		                                            WHERE	DEL_YN = 'N'
															AND DEVICE_CODE = #{dvCode})
		ORDER BY A.ORDER_SEQ ASC
	</select>
	
	
	<select id="ResultApi_GetDomainBrand" parameterType="String" resultType="hashmap">
		SELECT	DOMAIN_IDX AS domainIdx,
				BRAND_IDX AS brandIdx
		FROM 	KIOSK
		WHERE	DEL_YN = 'N'
				AND ACTIVE_YN = 'Y'
		        AND DEVICE_CODE = #{dvCode}
	</select>
	
	
	<select id="ResultApi_BrandList" parameterType="hashmap" resultType="hashmap">
		SELECT	A.SHOP_IDX AS brandIdx,
				A.DISP_NM_KR AS brandName,
		        A.DISP_NM_EN AS brandNameEn,
		        B.POS_X AS brandPositionX,
		        B.POS_Y AS brandPositionY,
		        A.TEL_NUM AS brandTelephone,
		        A.DETAIL_CONCEPT_TXT AS brandDesc,
		        A.DETAIL_CONCEPT_TXT_EN AS brandDescEn,
		        IF(A.LOGO_IMG IS NOT NULL, CONCAT('/download/File/', A.LOGO_IMG), '') AS brandLogoImage,
		        C.FILE_SAVE_NAME AS brandLogoImageName,
		        C.FILE_SIZE AS brandLogoImageSize,
		        IF(A.DETAIL_IMG IS NOT NULL, CONCAT('/download/File/', A.DETAIL_IMG), '') AS brandImage,
		        D.FILE_SAVE_NAME AS brandImageName,
		        D.FILE_SIZE AS brandImageSize
		FROM	 SHOP A
		INNER JOIN FLOOR_SHOP B ON A.DOMAIN_IDX = B.DOMAIN_IDX AND A.BRAND_IDX = B.BRAND_IDX AND A.SHOP_IDX = B.SHOP_IDX
		LEFT OUTER JOIN FILE_CONTENT C ON A.LOGO_IMG = C.FILE_CONTENT_IDX
		LEFT OUTER JOIN FILE_CONTENT D ON A.DETAIL_IMG = D.FILE_CONTENT_IDX
		WHERE	A.DEL_YN = 'N'
				AND A.ACTIVE_YN = 'Y'
		        AND A.DOMAIN_IDX = #{domainIdx}
		        AND A.BRAND_IDX = #{brandIdx}
		        AND B.FLOOR_IDX = #{floorIdx}
	</select>
	
	<select id="ResultApi_BrandMenuList" parameterType="hashmap" resultType="hashmap">
		SELECT	A.DETAIL_MENU_TITLE AS brandMenuTitle,
				A.DETAIL_MENU_DESC AS brandMenuDesc,
				A.DETAIL_MENU_TITLE_EN AS brandMenuTitleEn,
				A.DETAIL_MENU_DESC_EN AS brandMenuDescEn,
		        IF(A.FILE_CONTENT_IDX IS NOT NULL, CONCAT('/download/File/', A.FILE_CONTENT_IDX), '') AS brandMenuImage,
		        B.FILE_SAVE_NAME AS brandMenuImageName,
		        B.FILE_SIZE AS brandMenuImageSize
		FROM	 SHOP_IMAGELIST A
		INNER JOIN FILE_CONTENT B ON A.FILE_CONTENT_IDX = B.FILE_CONTENT_IDX
		WHERE	A.DOMAIN_IDX = #{domainIdx}
		        AND A.BRAND_IDX = #{brandIdx}
		        AND A.SHOP_IDX = #{shopIdx}
		ORDER BY ORDER_SEQ ASC
	</select>
	
	<select id="ResultApi_FacilityList" parameterType="hashmap" resultType="hashmap">
		SELECT	B.CODE_NAME AS facilityName,
				A.POS_X AS positionX,
		        A.POS_Y AS positionY
		FROM	 FLOOR_FACILITIES A
		INNER JOIN SYSTEM_CODE B ON A.FACILITY_TYPE = B.CODE_VALUE AND B.DEL_YN = 'N' AND B.ACTIVE_YN = 'Y'
		WHERE	A.DOMAIN_IDX = #{domainIdx}
		        AND A.BRAND_IDX = #{brandIdx}
		        AND A.FLOOR_IDX = #{floorIdx}
	</select>

	<!-- 단말별 사용자 Action 로그 저장 : resultAPI_sql.ResultApi_DeviceUserActionLogCreate -->
	<insert id="ResultApi_DeviceUserActionLogCreate" parameterType="java.util.List">
		INSERT INTO kiosklog_h
		(DOMAIN_IDX, BRAND_IDX, FRANC_IDX, DEVICE_IDX, FLOOR_IDX, ACTION_TYPE, ACTION_NAME, DAYOFWEEK, PLAYDATE, STARTTIME, REG_DATE)
		<foreach collection="list" item="item" index="index" separator="UNION ALL">
			SELECT DOMAIN_IDX, BRAND_IDX, FRANC_IDX, DEVICE_IDX, #{item.floorIdx} AS FLOOR_IDX, #{item.actionType} AS ACTION_TYPE, #{item.actionName} AS ACTION_NAME, 
				#{item.dayofweek} AS DAYOFWEEK, #{item.playdate} AS PLAYDATE, #{item.starttime} AS STARTTIME, now() AS REG_DATE
			FROM kiosk
			WHERE DEVICE_CODE = #{item.deviceCode}
		</foreach>
	</insert>
	
	<!-- 컨텐트 재생시간 로그 저장 : resultAPI_sql.ResultApi_ContentPlayLogCreate -->	
	<insert id="ResultApi_ContentPlayLogCreate" parameterType="java.util.List">
		INSERT INTO playlog_h
		(DOMAIN_IDX, BRAND_IDX, FRANC_IDX, DEVICE_IDX, MAIN_SCHEDULE_IDX, SCREEN_IDX, FILE_CONTENT_IDX, PL_PLAYDATE, PL_STARTTIME, PL_ENDTIME, PL_PLAYTIME, PL_PLAYMILLITIME, REG_DATE)
		<foreach collection="list" item="item" index="index" separator="UNION ALL">
			SELECT DOMAIN_IDX, BRAND_IDX, FRANC_IDX, DEVICE_IDX, #{item.mainScheduleIdx} AS MAIN_SCHEDULE_IDX, #{item.screenIdx} AS SCREEN_IDX, #{item.fileContentIdx} AS FILE_CONTENT_IDX,
				#{item.plPlaydate} AS PL_PLAYDATE, #{item.plStarttime} AS PL_STARTTIME, #{item.plEndtime} AS PL_ENDTIME, #{item.plPlaytime} AS PL_PLAYTIME, 
				#{item.plPlaymillitime} AS PL_PLAYMILLITIME, now() AS REG_DATE
			FROM kiosk
			WHERE DEVICE_CODE = #{item.deviceCode}
		</foreach>
	</insert>
</mapper>
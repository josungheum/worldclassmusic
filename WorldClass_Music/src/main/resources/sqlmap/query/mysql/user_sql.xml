<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserManagement">

	<select id="User_ListUser" parameterType="qss.vo.UserVo" resultType="qss.vo.UserVo">
		/*
		  ID  : user_sql.User_ListUser
		  DEC : 사용자 목록 조회
		*/
		<include refid="Common.BeforeSQL"/>
		SELECT  NAME
		      , ID
		      , USERS_IDX
		      , date_format(REG_DATE, '%Y-%m-%d') AS REG_DATE
		      , ACTIVE_YN
		FROM    USERS
		WHERE   IFNULL(DEL_YN, 'N') = 'N'
		AND     DOMAIN_IDX = #{domainIdx}
		AND     ADMIN_TYPE = #{adminType}
		<if test="brandIdx != null and brandIdx != '' and brandIdx != 0">
			AND BRAND_IDX = #{brandIdx}
		</if>
		<if test="francIdx != null and francIdx != '' and francIdx != 0">
			AND FRANC_IDX = #{francIdx}
		</if>
		<if test="sSearch != null and sSearch != ''">
            AND ID LIKE CONCAT('%',#{sSearch},'%')
        </if>
        <include refid="Common.AfterSQL"/>
	</select>

	<select id="User_ListCountUser" parameterType="qss.vo.UserVo" resultType="int">
		/*
		  ID  : user_sql.User_ListCountUser
		  DEC : 사용자 목록 카운터
		*/
		SELECT  COUNT(*)
		FROM    USERS
		WHERE   IFNULL(DEL_YN, 'N') = 'N'
		AND     DOMAIN_IDX = #{domainIdx}
		AND     ADMIN_TYPE = #{adminType}
		<if test="brandIdx != null and brandIdx != '' and brandIdx != 0">
			AND BRAND_IDX = #{brandIdx}
		</if>
		<if test="francIdx != null and francIdx != '' and francIdx != 0">
			AND FRANC_IDX = #{francIdx}
		</if>
		<if test="sSearch != null and sSearch != ''">
            AND ID LIKE CONCAT('%',#{sSearch},'%')
        </if>
	</select>



	<update id="User_PwdChangeUser" parameterType="qss.vo.UserVo" >
		/*
		  ID  : user_sql.User_PwdChangeUser
		  DEC : 사용자 비밀번호 변경
		*/
		UPDATE USERS
		set    MOD_USER = #{regUser}
		     , MOD_DATE = now()
		     , password = #{password}
		     , PASSWORD_FAIL_COUNT = 0
		WHERE  USERS_IDX = #{usersIdx}
		AND    DOMAIN_IDX = #{domainIdx}
	</update>

	<update id="User_ActiveUser" parameterType="qss.vo.UserVo">
		/*
		  ID  : user_sql.User_ActiveUser
		  DEC : 사용자 활성화 여부
		*/
		UPDATE USERS
		set    MOD_USER = #{regUser}
		     , MOD_DATE = now()
		     , ACTIVE_YN = #{activeYn}
		WHERE  USERS_IDX = #{usersIdx}
		AND    DOMAIN_IDX = #{domainIdx}
	</update>

	<insert id="User_InsertUser" parameterType="qss.vo.UserVo" >
		/*
		  ID  : user_sql.User_InsertUser
		  DEC : 사용자 등록
		*/
		<selectKey keyProperty="usersIdx" resultType="String" order="BEFORE">
			SELECT IFNULL(MAX(CONVERT(USERS_IDX, UNSIGNED)) + 1, '1')
			FROM   USERS
			WHERE  DOMAIN_IDX = #{domainIdx}
		</selectKey>
		INSERT INTO users
		(
			  DOMAIN_IDX
			, USERS_IDX
			, ID
			, FRANC_IDX
			, BRAND_IDX
			, ADMIN_TYPE
			, NAME
			, PASSWORD
			, ACTIVE_YN
			, DEL_YN
			, REG_USER
			, REG_DATE
			, MOD_USER
			, MOD_DATE
		)
		VALUES
		(
			 #{domainIdx}
		    , #{usersIdx}
		    , #{id}
		    , #{francIdx}
		    , #{brandIdx}
		    , #{adminType}
		    , #{name}
		    , #{password}
		    , #{activeYn}
		    , 'N'
		    , #{regUser}
		    , now()
		    , #{regUser}
		    , now()
		 )
	</insert>



	<select id="User_OverlapCountUser" parameterType="qss.vo.UserVo" resultType="int">
		/*
		  ID  : user_sql.User_OverlapCountUser
		  DEC : 사용자 아이디 중복체크
		*/
		SELECT  count(*)
		FROM    USERS
		WHERE   DOMAIN_IDX = #{domainIdx}
		AND     ID = #{id}
<!-- 		AND     IFNULL(DEL_YN, 'N') = 'N' -->

	</select>

	<update id="User_DeleteUser" parameterType="qss.vo.UserVo">
		/*
		  ID  : user_sql.User_DeleteUser
		  DEC : 사용자 삭제
		*/
		UPDATE USERS
		set    DEL_YN = 'Y'
		     , MOD_USER = #{regUser}
		     , MOD_DATE = now()
		WHERE  DOMAIN_IDX = #{domainIdx}
		AND    USERS_IDX IN
		<foreach collection="checkboxArr" item="id" open="(" close=")" separator=",">
	        #{id}
	    </foreach>
	</update>
</mapper>
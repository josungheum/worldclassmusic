<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Template">
	<resultMap type="qss.vo.TemplateVo" id="TemplateVo" />
	<resultMap type="qss.vo.TemplateLayerVo" id="TemplateLayerVo" />

	<!-- 템플릿 리스트 조회 : template_sql.Template_TemplateList -->
	<select id="Template_TemplateList" parameterType="qss.vo.TemplateVo" resultType="qss.vo.TemplateVo">
		<include refid="Common.BeforeSQL"/>
			<if test="sessionAdminType != null and sessionAdminType != '' and sessionAdminType == 'ADM0001'">
				SELECT T.DOMAIN_IDX, T.BRAND_IDX, T.TEMPLATE_IDX, T.TEMPLATE_NAME, T.ROW_CNT, T.COL_CNT, T.PLAY_TIME, T.RESOLUTION_X, T.RESOLUTION_Y,
						IFNULL(T.DEL_YN, 'N') = 'N' AS DEL_YN, T.REG_USER, date_format(T.REG_DATE, '%Y-%m-%d') AS REG_DATE, T.MOD_USER, date_format(T.MOD_DATE, '%Y-%m-%d') AS MOD_DATE
				FROM template T
					INNER JOIN brand b ON  b.DOMAIN_IDX = T.DOMAIN_IDX AND b.BRAND_IDX = T.BRAND_IDX AND ifnull(b.DEL_YN, 'N') = 'N'
				WHERE IFNULL(T.DEL_YN, 'N') = 'N' AND T.DOMAIN_IDX = #{domainIdx}
				<if test="brandIdx != null and brandIdx != null and brandIdx != 0">
					AND T.BRAND_IDX = #{brandIdx}
				</if>
				<if test="sSearch != null and sSearch != ''">
		            AND T.TEMPLATE_NAME LIKE CONCAT('%',#{sSearch},'%')
		        </if>
	    	</if>
			<!-- 시스템 관리자가 아닐경우(서비스, 매장 관리자) -->
			<if test="sessionAdminType != null and sessionAdminType != '' and sessionAdminType != 'ADM0001'">
				SELECT T.DOMAIN_IDX, T.BRAND_IDX, T.TEMPLATE_IDX, T.TEMPLATE_NAME, T.ROW_CNT, T.COL_CNT, T.PLAY_TIME, T.RESOLUTION_X, T.RESOLUTION_Y,
						IFNULL(T.DEL_YN, 'N') = 'N' AS DEL_YN, T.REG_USER, date_format(T.REG_DATE, '%Y-%m-%d') AS REG_DATE, T.MOD_USER, date_format(T.MOD_DATE, '%Y-%m-%d') AS MOD_DATE
				FROM template T
					INNER JOIN brand b ON  b.DOMAIN_IDX = T.DOMAIN_IDX AND b.BRAND_IDX = T.BRAND_IDX AND ifnull(b.DEL_YN, 'N') = 'N'
				WHERE IFNULL(T.DEL_YN, 'N') = 'N' AND T.DOMAIN_IDX = #{domainIdx}
				<if test="sessionBrandIdx != null and sessionAdminType != '' and sessionAdminType == 'ADM0002'">
			 		/* 서비스 관리자는 해당 서비스에 포함된 모든 매장 포함되게 또는 선택한 매장만 */
			 		AND T.BRAND_IDX = #{sessionBrandIdx}
			 	</if>
				<if test="sessionBrandIdx != null and sessionAdminType != '' and sessionAdminType == 'ADM0003'">
					/* 매장 관리자는 자신이 속한 서비스의 자기 매장만 보이게 */
					AND T.BRAND_IDX = #{sessionBrandIdx}
			 	</if>
				<if test="sSearch != null and sSearch != ''">
					AND T.TEMPLATE_NAME LIKE CONCAT('%',#{sSearch},'%')
				</if>
			</if>
		<include refid="Common.AfterSQL"/>
	</select>

	<!-- 템플릿 리스트 카운트 조회 : template_sql.Template_TemplateListCnt -->
	<select id="Template_TemplateListCnt" parameterType="qss.vo.TemplateVo" resultType="int">
		<if test="sessionAdminType != null and sessionAdminType != '' and sessionAdminType == 'ADM0001'">
			SELECT COUNT(T.DOMAIN_IDX)
			FROM template T
		 		INNER JOIN brand b ON  b.DOMAIN_IDX = T.DOMAIN_IDX AND b.BRAND_IDX = T.BRAND_IDX AND ifnull(b.DEL_YN, 'N') = 'N'
			WHERE IFNULL(T.DEL_YN, 'N') = 'N' AND T.DOMAIN_IDX = #{domainIdx}
			<if test="brandIdx != null and brandIdx != null and brandIdx != 0">
				AND T.BRAND_IDX = #{brandIdx}
			</if>
			<if test="sSearch != null and sSearch != ''">
				AND T.TEMPLATE_NAME LIKE CONCAT('%',#{sSearch},'%')
			</if>
		</if>
		<!-- 시스템 관리자가 아닐경우(서비스, 매장 관리자) -->
		<if test="sessionAdminType != null and sessionAdminType != '' and sessionAdminType != 'ADM0001'">
			SELECT COUNT(T.DOMAIN_IDX)
			FROM template T
				INNER JOIN brand b ON  b.DOMAIN_IDX = T.DOMAIN_IDX AND b.BRAND_IDX = T.BRAND_IDX AND ifnull(b.DEL_YN, 'N') = 'N'
			WHERE IFNULL(T.DEL_YN, 'N') = 'N' AND T.DOMAIN_IDX = #{domainIdx}
			<if test="sessionBrandIdx != null and sessionAdminType != '' and sessionAdminType == 'ADM0002'">
				/* 서비스 관리자는 해당 서비스에 포함된 모든 매장 포함되게 또는 선택한 매장만 */
				AND T.BRAND_IDX = #{sessionBrandIdx}
			</if>
			<if test="sessionBrandIdx != null and sessionAdminType != '' and sessionAdminType == 'ADM0003'">
				/* 매장 관리자는 자신이 속한 서비스의 자기 매장만 보이게 */
				AND T.BRAND_IDX = #{sessionBrandIdx}
			</if>
			<if test="sSearch != null and sSearch != ''">
				AND T.TEMPLATE_NAME LIKE CONCAT('%',#{sSearch},'%')
			</if>
		</if>
	</select>

	<!-- 템플릿 상세 조회 : template_sql.Template_TemplateGet -->
	<select id="Template_TemplateGet" parameterType="qss.vo.TemplateVo" resultType="qss.vo.TemplateVo">
		SELECT T.DOMAIN_IDX, T.BRAND_IDX, T.TEMPLATE_IDX, T.TEMPLATE_NAME, T.ROW_CNT, T.COL_CNT
			,T.PLAY_TIME ,T.RESOLUTION_X ,T.RESOLUTION_Y, T.DEL_YN, T.REG_USER, T.REG_DATE, T.MOD_USER, T.MOD_DATE 	
			,TL.TEMPLATE_LAYER_IDX, TL.TEMPLATE_LAYER_NAME, TL.START_COL, TL.START_ROW, TL.COL_SPAN, TL.ROW_SPAN, TL.ORDER_SEQ
		FROM template T
			LEFT OUTER JOIN template_layer TL ON T.DOMAIN_IDX = TL.DOMAIN_IDX AND T.BRAND_IDX = TL.BRAND_IDX AND T.TEMPLATE_IDX = TL.TEMPLATE_IDX
		WHERE T.DOMAIN_IDX = #{domainIdx}
		<if test="brandIdx != null and brandIdx != 0">
			AND T.BRAND_IDX = #{brandIdx}
		</if>
		AND T.TEMPLATE_IDX = #{templateIdx} AND IFNULL(TL.DEL_YN, 'N') = 'N'
	</select>

	<!-- 템플릿 저장 : template_sql.Template_InsertTemplate -->	
	<insert id="Template_InsertTemplate" parameterType="hashmap" useGeneratedKeys="true">
		<selectKey keyProperty="templateIdx" resultType="biginteger" order="BEFORE">
			SELECT IFNULL(MAX(TEMPLATE_IDX) + 1, 1)
			FROM template
		</selectKey>
		<![CDATA[
			INSERT INTO template
				(DOMAIN_IDX, BRAND_IDX, TEMPLATE_IDX, TEMPLATE_NAME, ROW_CNT, COL_CNT, PLAY_TIME, RESOLUTION_X, RESOLUTION_Y, DEL_YN,
				REG_USER, REG_DATE, MOD_USER, MOD_DATE)
			VALUES
				(#{domainIdx}, #{brandIdx}, #{templateIdx}, #{templateName}, #{rowCnt}, #{colCnt}, #{playTime}, #{resolutionX}, #{resolutionY}, #{delYn},
				#{regUser}, NOW(), #{modUser}, NOW())
		]]>
	</insert>

	<!-- 템플릿레이어 저장 : template_sql.Template_InsertTemplateLayer -->
	<insert id="Template_InsertTemplateLayer" parameterType="hashmap">
		<selectKey keyProperty="templateLayerIdx" resultType="biginteger" order="BEFORE">
		SELECT
			IFNULL(MAX(TEMPLATE_LAYER_IDX) + 1, 1)
		FROM template_layer
		</selectKey>
		<![CDATA[
			INSERT INTO template_layer
				(DOMAIN_IDX, BRAND_IDX, TEMPLATE_IDX, TEMPLATE_LAYER_IDX, TEMPLATE_LAYER_NAME, START_COL, START_ROW, COL_SPAN, ROW_SPAN, PLAY_TIME,
				ORDER_SEQ, DEL_YN, REG_USER, REG_DATE, MOD_USER, MOD_DATE)
			VALUES
				(#{domainIdx}, #{brandIdx}, #{templateIdx}, #{templateLayerIdx}, #{templatelayerName}, #{startCol}, #{startRow}, #{colSpan}, #{rowSpan}, #{playTime},
				#{orderSeq}, 'N', #{regUser}, NOW(), #{modUser}, NOW())
		]]>
	</insert>
	
	<!-- 템플릿 수정 : template_sql.Template_UpdateTemplate -->
	<update id="Template_UpdateTemplate" parameterType="hashmap" >
		<![CDATA[
			UPDATE template
				SET TEMPLATE_NAME = #{templateName}, ROW_CNT = #{rowCnt}, COL_CNT = #{colCnt}, PLAY_TIME = #{playTime},
		            RESOLUTION_X = #{resolutionX}, RESOLUTION_Y = #{resolutionY}, DEL_YN = #{delYn}, MOD_USER = #{modUser}, MOD_DATE = NOW()
			WHERE DOMAIN_IDX = #{domainIdx} AND BRAND_IDX = #{brandIdx} AND TEMPLATE_IDX = #{templateIdx}
		]]>
	</update>
	
	<!-- 템플릿 삭제 : template_sql.Template_Delete -->
	<update id="Template_Delete" statementType="CALLABLE" parameterType="hashmap">
		<![CDATA[
			UPDATE template 
				SET	DEL_YN = 'Y', MOD_USER = #{modUser}, MOD_DATE = NOW()
			WHERE DOMAIN_IDX = #{domainIdx} AND BRAND_IDX = #{brandIdx}
		]]>
		<if test="arrIndex != null and arrIndex != null and arrIndex != 0">
			AND TEMPLATE_IDX IN
			<foreach collection="arrIndex" item="templateIdx"  open="(" close=")" separator=",">
	            #{templateIdx}
	        </foreach>
        </if>
	</update>
	
	<!-- 템플릿 레이어 삭제 : template_sql.Template_DeleteLayer -->
	<delete id="Template_DeleteLayer" parameterType="hashmap" >
		<![CDATA[
			DELETE FROM template_layer
    		WHERE DOMAIN_IDX = #{domainIdx} AND BRAND_IDX = #{brandIdx} AND TEMPLATE_IDX = #{templateIdx}
		]]>
	</delete>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Event">
	<insert id="Event_ImageListCreate" parameterType="qss.vo.EventVo">
		INSERT INTO EVENT_IMAGELIST (DOMAIN_IDX, BRAND_IDX, EVENT_IDX, FILE_CONTENT_IDX, ORDER_SEQ, EVENT_TYPE)
		VALUES
		<foreach item="item" index="index" collection="imageList" separator=" , ">
			(#{domainIdx}, #{brandIdx}, #{eventIdx}, #{item.fileContentIdx}, #{item.orderSeq}, #{eventType})
		</foreach>
	</insert>
	
	<delete id="Event_ImageListDelete" parameterType="qss.vo.EventVo">
		DELETE
		FROM	EVENT_IMAGELIST
		WHERE	EVENT_IDX = (#{eventIdx})
	</delete>
	
	<select id="Event_ImageList" parameterType="qss.vo.EventVo" resultType="qss.vo.EventVo">
		SELECT A.FILE_CONTENT_IDX, B.THUMBNAIL_PATH, A.EVENT_TYPE
		FROM 	EVENT_IMAGELIST A
			INNER JOIN FILE_CONTENT B ON A.FILE_CONTENT_IDX = B.FILE_CONTENT_IDX
		WHERE	A.EVENT_TYPE = #{eventType}
				AND A.DOMAIN_IDX = #{domainIdx}
				AND A.BRAND_IDX = #{brandIdx}
				AND A.EVENT_IDX = #{eventIdx}
		ORDER BY A.ORDER_SEQ
	</select>
	
	<insert id="Event_Create" parameterType="qss.vo.EventVo" useGeneratedKeys="true">
		<selectKey keyProperty="newIdx" resultType="biginteger" order="BEFORE">
			SELECT IFNULL(MAX(EVENT_IDX) + 1, 1)
			FROM EVENT
		</selectKey>
		INSERT INTO EVENT(DOMAIN_IDX, BRAND_IDX, EVENT_IDX, DISP_NM1, DISP_NM2, START_DATE, END_DATE, ORDER_SEQ, THUMB_IMG, ACTIVE_YN, DEL_YN, REG_USER, REG_DATE, MOD_USER, MOD_DATE)
				  VALUES(#{domainIdx},
				  		 #{brandIdx},
				  		 #{newIdx},
				  		 #{dispNm1},
				  		 #{dispNm2},
				  		 #{startDate},
				  		 #{endDate},
				  		 #{orderSeq},
				  		 #{thumbImg},
				  		 'Y',
				  		 'N',
				  		 #{regUser},
				  		 NOW(),
				  		 #{modUser},
				  		 NOW()
				  		 )
	</insert>
	
	
	<select id="Event_Get" parameterType="qss.vo.EventVo" resultType="qss.vo.EventVo">
		SELECT	A.DOMAIN_IDX,
				A.BRAND_IDX,
		        A.EVENT_IDX,
		        A.DISP_NM1,
		        A.DISP_NM2,
		        DATE_FORMAT(A.START_DATE,'%Y-%m-%d') AS START_DATE,
				DATE_FORMAT(A.END_DATE,'%Y-%m-%d') AS END_DATE,
		        A.ORDER_SEQ,
		        A.THUMB_IMG,
		        B.THUMBNAIL_PATH AS THUMBNAIL_PATH
		FROM	EVENT A
		LEFT OUTER JOIN FILE_CONTENT B ON A.THUMB_IMG = B.FILE_CONTENT_IDX
		WHERE	A.DEL_YN = 'N'
				AND A.DOMAIN_IDX = #{domainIdx}
				AND A.BRAND_IDX = #{brandIdx}
				AND A.EVENT_IDX = #{eventIdx}
	</select>
	
	<update id="Event_Delete" parameterType="qss.vo.EventVo">
		<![CDATA[
			UPDATE  EVENT
		    SET     DEL_YN = 'Y',
		            MOD_USER = #{modUser},
		            MOD_DATE = NOW(),
		            ORDER_SEQ = 0
		    WHERE   DOMAIN_IDX = #{domainIdx} AND BRAND_IDX = #{brandIdx}
		]]>
		AND EVENT_IDX IN
		<foreach collection="checkboxArr" item="item"  open="(" close=")" separator=",">
            #{item}
        </foreach>
	</update>
	
	<update id="Event_Update" parameterType="qss.vo.EventVo">
		UPDATE	EVENT
		SET		DISP_NM1 = #{dispNm1}, 
				DISP_NM2 = #{dispNm2},
				ORDER_SEQ = #{orderSeq},
				THUMB_IMG = #{thumbImg},
				START_DATE = #{startDate},
				END_DATE = #{endDate},
				MOD_USER = #{modUser},
				MOD_DATE = NOW()
		WHERE	EVENT_IDX = #{eventIdx}
	</update>
	
	<select id="Event_List" parameterType="qss.vo.EventVo" resultType="qss.vo.EventVo">
		<include refid="Common.BeforeSQL" />
		SELECT	A.DOMAIN_IDX,
				A.BRAND_IDX,
				A.EVENT_IDX,
				A.THUMB_IMG,
				B.THUMBNAIL_PATH AS THUMBNAIL_PATH,
				A.DISP_NM1,
				A.DISP_NM2,
				DATE_FORMAT(A.START_DATE,'%Y-%m-%d') AS START_DATE,
				DATE_FORMAT(A.END_DATE,'%Y-%m-%d') AS END_DATE,
				A.ACTIVE_YN,
				A.ORDER_SEQ,
				DATE_FORMAT(A.MOD_DATE,'%Y-%m-%d') AS MOD_DATE
		FROM	EVENT A
		LEFT OUTER JOIN FILE_CONTENT B ON A.THUMB_IMG = B.FILE_CONTENT_IDX
		WHERE	A.DEL_YN = 'N'
				AND A.DOMAIN_IDX = #{domainIdx}
				AND A.BRAND_IDX = #{brandIdx}
		<if test="sSearch != null and sSearch != ''">
			AND (A.DISP_NM1 LIKE CONCAT('%',#{sSearch},'%') OR
				 A.DISP_NM2 LIKE CONCAT('%',#{sSearch},'%')
				 )
		</if>
		<include refid="Common.AfterSQL" />
	</select>
	
	<select id="Event_ListCnt" parameterType="qss.vo.EventVo" resultType="int">
		SELECT	COUNT(*)
		FROM	EVENT A
		LEFT OUTER JOIN FILE_CONTENT B ON A.THUMB_IMG = B.FILE_CONTENT_IDX
		WHERE	A.DEL_YN = 'N'
				AND A.DOMAIN_IDX = #{domainIdx}
				AND A.BRAND_IDX = #{brandIdx}
		<if test="sSearch != null and sSearch != ''">
			AND (A.DISP_NM1 LIKE CONCAT('%',#{sSearch},'%') OR
				 A.DISP_NM2 LIKE CONCAT('%',#{sSearch},'%')
				 )
		</if>
	</select>
	
	<update id="Event_ActiveYn" parameterType="qss.vo.EventVo">
		UPDATE  EVENT
	    SET     ACTIVE_YN = #{activeYn},
	            MOD_USER = #{modUser},
	            <if test='activeYn == "N"'>
	            ORDER_SEQ = 0,
	            </if>
	            MOD_DATE = NOW()
	    WHERE   DOMAIN_IDX = #{domainIdx} AND BRAND_IDX = #{brandIdx} AND EVENT_IDX = #{eventIdx}
	</update>
	
	<select id="Event_GetOrderSeq" parameterType="qss.vo.EventVo" resultType="int">
		SELECT	ORDER_SEQ
		FROM	EVENT
		WHERE	EVENT_IDX = #{eventIdx}
	</select>
	
	<update id="Event_UpdateOrderSeq">
		<![CDATA[
			UPDATE	(SELECT	EVENT_IDX, ROWNUM
					FROM	(
					SELECT	EVENT_IDX,
							ORDER_SEQ,
							@ROWNUM := @ROWNUM + 1 AS ROWNUM
					FROM	EVENT
					INNER JOIN (SELECT @ROWNUM := 0) B
					WHERE	DEL_YN = 'N'
							AND ACTIVE_YN = 'Y'
					ORDER BY ORDER_SEQ ASC, MOD_DATE DESC
					) A
					ORDER BY ROWNUM
			        ) A,
			        EVENT B
			SET		B.ORDER_SEQ = A.ROWNUM
			WHERE	B.DEL_YN = 'N'
					AND B.ACTIVE_YN = 'Y'
					AND B.EVENT_IDX = A.EVENT_IDX
		]]>
	</update>
	
	<update id="Event_UpdateOrderSeqAsc">
		<![CDATA[
			UPDATE	(SELECT	EVENT_IDX, ROWNUM
					FROM	(
					SELECT	EVENT_IDX,
							ORDER_SEQ,
							@ROWNUM := @ROWNUM + 1 AS ROWNUM
					FROM	EVENT
					INNER JOIN (SELECT @ROWNUM := 0) B
					WHERE	DEL_YN = 'N'
							AND ACTIVE_YN = 'Y'
					ORDER BY ORDER_SEQ ASC, MOD_DATE ASC
					) A
					ORDER BY ROWNUM
			        ) A,
			        EVENT B
			SET		B.ORDER_SEQ = A.ROWNUM
			WHERE	B.DEL_YN = 'N'
					AND B.ACTIVE_YN = 'Y'
					AND B.EVENT_IDX = A.EVENT_IDX
		]]>
	</update>
	
	
	<update id="Event_BatchDelete">
		
			UPDATE	EVENT
			SET		ACTIVE_YN = 'N',
					MOD_DATE = NOW(),
			        ORDER_SEQ = 0
			WHERE	DATE_FORMAT(END_DATE, '%Y%m%d') <![CDATA[<]]> DATE_FORMAT(NOW(), '%Y%m%d')
					AND DEL_YN = 'N'
					AND ORDER_SEQ != 0
	</update>
	
</mapper>	